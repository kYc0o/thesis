% rc-qanda.sty alpha v0.3
%
% Copyright (c) 2000-2005 Rafael Corchuelo (corchu@us.es)
%
% This class provides new commands for typesetting exercises and answers
%
% This class IS NOT re-distributable.  Only members of the TDG are allowed to
% use it.  If you happen to have this file, please, use it at your own risk.
% No support is available.  Don't send me e-mail asking me about RC-QandA.
% A day, RC-QandA will be made available to LaTeX users, but that day still
% has to come!

% alpha v0.0 2004/09/01
%
% New features
%   - Use \RCQandA to typeset the name of this package properly.
%   - Use que question environment to typeset questions, and the
%     the answer environment to typeset their answers in a new chapter
%     at the very end of the document.  For instance:
%
%     \begin{question}
%        An important question\dots
%     \end{question}
%     \begin{answer}
%        \dots has an important answer
%     \end{answer}
%
%   - What you type inside the question environment is typeset
%     immediately, but the corresponding answer is stored in a file with
%     extension `.ans' until the \printanswers command is executed.
%     If you use \RC-QandA with RC-BooK, you needn't use the \printanswers
%     command since it's now part of the \makeback command. Needless to say
%     \printanswers does not produce any output unless a question and
%     its corresponding answer was typeset!
%   - Redefine \questionname and \answername to localise the text
%     that appears in front of each question or answer, respectively.
%     Similarly, you can redefine \answerschaptername to localise the name
%     of the chapter that \printanswers produces.  Notice that you needn't
%     to worry about if your RC-BooK version is 2.8 or higher.

% alpha v0.1 2005/01/06
%
% New features
%   - Now you can create your own question environments
%    by using the command \newquestion{environment-name}{display-name}, where
%    environment-name is the name you want to assign to you environment and
%    display-name is the name you want to typeset on your document.  For instance,
%    the following command creates a new question environment called test:
%
%    \newquestion{test}{Test}
%
%    Once the command is executed, you can type the following to typeset a test and
%    its corresponding answer:
%
%    \begin{test}
%    Prove that there exist infinitely many integers such that
%    $x^2 + y^2 = (x + y)^2$.
%    \end{test}
%
%    \begin{answer}
%    According to the Hairy Ball Theorem, there exist an integer such that\dots
%    \end{answer}
%
%    By default, RC-QandA provides the following question environments: question,
%    exercise, problem, and test. Their display names are customised automatically
%    to the language selected in your document.  Each question environment is
%    numbered independently to easy the reference.
%
% Fixed bugs, I mean... features
%   - Question numbers were not reset on every new chapter. It's been fixed.

% alpha v0.2 2006/02/24
%
% New features
%   - Now you can create your own step environments, which are very useful
%     to typeset procedures composed of steps.  For instance:
%     \newstep{steps}{Step} creates the standard step environment that
%     is provided by default.  If you type:
%
%     \begin{steps}
%     \item stuff (1)
%         \begin{steps}
%         \item stuff (1.1)
%         \item stuff (1.2)
%         \end{steps}
%     \item stuff (2)
%         \begin{steps}
%         \item stuff (2.1)
%         \item stuff (2.2)
%         \end{steps}
%     \end{steps}
%
%     then you get what follows:
%
%       Step 1: stuff (1)
%           > 1.1: stuff (1.1)
%           > 1.2: stuff (1.2)
%       Step 2: stuff (2)
%           > 2.1: stuff (2.1)
%           > 2.2: stuff (2.2)
%
% Fixed bugs, I mean... features
%   - RC-QandA may now be used quite independently from RC-BooK.
%   - I forgot to require package `amssymb'.
%   - You needn't use a class that defines chapters.  RC-QandA works now well
%     with the article class, for instance.

% alpha v0.3 2007/05/28
%
% New features
%
% Fixed bugs, I mean... features
%   - \begin{question} Name \end{question} produced "Ã‘ame".  This was fixed.

\NeedsTeXFormat{LaTeX2e}[1995/12/01]

\ProvidesPackage{rc-qanda}
   [2007/05/28 alpha v0.3 Copyright (C) 2004-2007 The Distributed Group]

\typeout{rc-qanda.sty alpha v0.3 Copyright (C) 2004-2007 The Distributed Group}

\RequirePackage{amssymb}
\RequirePackage{verbatim}
\RequirePackage{ifthen}

% \RCQandA

\newcommand{\RCQandA}%
{%
    R%
    \kern-.1667em\raise.25ex\hbox{C}%
    \kern-.25em\raise.25ex\hbox{--}%
    Q%
    \kern-.0em\raise.5ex\hbox{a}%
    \kern-.1em\lower.2ex\hbox{n}%
    \kern-.1em\lower.4ex\hbox{d}%
    \kern-.2em\lower.2ex\hbox{A}%
    \xspace%
}

\newwrite\ans
\immediate\openout\ans=\jobname.ans

\def\questionname{QUESTION}
\def\exercisename{EXERCISE}
\def\problemname{PROBLEM}
\def\testname{TEST}
\def\stepname{Step}
\def\answerschaptername{Answers}
\def\answername{Answer without question!}

\newif\if@hasqanda
\def\@hasqandatrue{\let\if@hasprograms\iftrue}
\def\@hasqandafalse{\let\if@hasprograms\iffalse}
\@hasqandafalse

\def\rc@chapterprefix{%
    \ifx\thechapter\undefined%
    \else%
        \thechapter.%
    \fi%
}

% \begin{rc@question}{question-name} text \end{rc@question}

%\let\rc@prevthechapter=\thechapter

\newenvironment{rc@question}[2]%
{%
    \if@hasqanda%
    \else%
        \protected@write\@auxout%
          {\let\label\@gobble \let\index\@gobble \let\glossary\@gobble}%
          {\string\gdef\string\showanswers{}}%
    \fi%
    \global\@hasqandatrue%
    \expandafter\addtocounter{#1@no}{1}%
    \global\def\answername{#2}%
    %\medbreak%
    \noindent%
    \global\def\rc@qno{\the\value{#1@no}}%
    \textbf{$\blacktriangleright$~#2~\rc@chapterprefix\rc@qno:}\space%
}%
{%
    \par%
    %\medbreak%
}

% \begin{answer} text \end{answer}

\newenvironment{answer}%
{%
    \bgroup
        \immediate\write\ans{}%
        \immediate\write\ans{\string\begin{answerno}{\answername}{\rc@chapterprefix\rc@qno}}%
        \@bsphack%
        \let\do\@makeother\dospecials\catcode`\^^M\active%
        \def\verbatim@processline{%
            \immediate\write\ans{\the\verbatim@line}%
        }%
        \verbatim@%
        \mbox{}%
}%
{%
        %\endverbatim%
        \@esphack%
        \immediate\write\ans{\string\end{answerno}}%
    \egroup%
}

\newenvironment{answerno}[2]%
{%
    \noindent\textbf{$\blacktriangleright$~#1~#2:}\space%
}%
{%
    \par%
}

% New questions

\newcommand{\newquestion}[2]%
{%
    \expandafter\def\csname #1\endcsname{\rc@question{#1}{#2}}%
    \expandafter\def\csname end#1\endcsname{\endrc@question}%
    \ifx\thechapter\@undefined%
        \newcounter{#1@no}%
    \else%
        \newcounter{#1@no}[chapter]%
    \fi%
}

\newquestion{question}{\questionname}
\newquestion{problem}{\problemname}
\newquestion{exercise}{\exercisename}
\newquestion{test}{\testname}

% Steps

\newcount\@stepdepth
\@stepdepth = 0
\newcounter{stepi}
\newcounter{stepii}[stepi]
\newcounter{stepiii}[stepii]
\newcounter{stepiv}[stepiii]

\renewcommand\thestepi{\@arabic\value{stepi}}
\renewcommand\thestepii{\thestepi.\@arabic\value{stepii}}
\renewcommand\thestepiii{\thestepii.\@arabic\value{stepiii}}
\renewcommand\thestepiv{\thestepiii.\@arabic\value{stepiv}}

\def\rc@step#1{%
     \ifnum \@stepdepth > 3\@toodeep%
     \else%
         \advance\@stepdepth\@ne
         \edef\@stepctr{step\romannumeral\the\@stepdepth}%
         \list%
             {\ifnum\@stepdepth=1\textit{#1}~\csname the\@stepctr\endcsname:\else$\triangleright$\space\csname the\@stepctr\endcsname:\fi}%
             {\topsep=0pt\usecounter\@stepctr}%
     \fi%
}
\let\endrc@step=\endlist

\newcommand{\newstep}[2]%
{%
    \expandafter\def\csname #1\endcsname{\rc@step{#2}}%
    \expandafter\def\csname end#1\endcsname{\endrc@step}%
}

\newstep{steps}{\stepname}

% \printanswers

\def\printanswers{%
    \ifx\showanswers\@undefined%
    \else%
        \ifx\relax\chapter%
            \section*{\answerschaptername}%
        \else%
            \chapter*{\answerschaptername}%
            \markboth{\answerschaptername}{\answerschaptername}%
            \thispagestyle{empty}%
        \fi%
        \immediate\closeout\ans%
        \input{\jobname.ans}%
    \fi%
}

\endinput

% EOF rc-qanda.sty
