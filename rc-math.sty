% rc-math.sty alpha v0.3
%
% Copyright (c) 2000-2007 Rafael Corchuelo (corchu@us.es)
%
% This class provides new commands for type-setting modern, attractive books
%
% This class IS NOT re-distributable.  Only members of the TDG are allowed to
% use it.  If you happen to have this file, please, use it at your own risk.
% No support is available.  Don't send me e-mail asking me about RC-Math.
% A day, RC-Math will be made available to LaTeX users, but that day still
% has to come!

% alpha v0.0 2003/11/28
%
% New features
%   - Use \RCMath to typeset the name of this package properly.
%   - Use the formulae environment to typeset custom formulae.  By default,
%     formulae is typeset in three columns with the specification rcl, but
%     this may be changed.
%
%    \begin{formulae}
%       \lambda & = & (\alpha, \beta) \\
%       \alpha  & = & [\alpha_1, \alpha_2, \dots] \\
%       \beta   & = & [\beta_1, \beta_2, \dots]
%    \end{formulae}
%
%    The environment accepts an optional parameter that allows to change
%    the default column specification.  For instance:
%
%    \begin{formulae}[rl]
%       \alpha \lambda \upsilon & \beta \delta \\
%                   \alpha \chi & \gamma \rho \varphi \\
%               \eta \phi \beta & \delta
%    \end{formulae}
%
%   - Use \labeleqn to number an equation.  For instance:
%
%    \begin{formulae}
%        \alpha   & = & 3 \beta    \labeleqn{eqn-1} \\ % Gets numbered
%        \beta    & = & 6 \epsilon                  \\ % Not numbered
%        \epsilon & = & 5 \alpha   \labeleqn{eqn-2}    % Gets numbered
%    \end{formulae}
%
%   - Use the scheme environment to typeset Z-like schema.  For instance
%
%     \begin{scheme}{BirthdayBook}
%         known \colon 2^{NAME} \\
%         birthday \colon NAME \then DATE \\
%     \suchthat
%         known = \dom birthday \\
%     \end{scheme}
%
%     \begin{scheme}[X]{GenericInclusion}
%         s \colon 2^{X} \\
%         includes \colon X \\
%     \suchthat
%         includes(x) \iff x \in s \\
%     \end{scheme}
%
%   - Use \infrule to typeset inference rules.  For instance
%
%     \begin{displaymath}
%        \infrule[nonumber]{inf-rule-label}
%           {Antecedent}
%           {Consequent}
%           {Applicability\ conditions}
%           {Definitions}
%     \end{displaymath}
%
%     Inference rules are numbered by default.  In order not to number them,
%     use the first optional parameter nonumber.
%   - Use \transition{event}{name}{dec} to typeset transition relations.
%     For instance, $\transition{\iota}{IP}{!}$ denotes the normalisation of
%     transition relation ->IP on occurrence of event \iota.  It is typeset
%     as follows:
%
%             i     !
%          ------->
%                  IP
%
% Known bugs, I mean... features
%   - \infrule can't be used inside a formulae environment.  Use it in text
%     mode or in a displaymath environment.
%   - The if and where labels in inference rules are typeset in English only
%   - \transition can't be used in text mode

% alpha v0.1 2004/09/01
%
% New features
%   - RC-Math defines now a handful localisable environments to typeset theorems,
%     corollaries, lemmata, propositions, examples, definitions and proofs.  Please,
%     forget about the old-good-times `newproof.sty' package, and make sure you
%     don't redefine them!
%
% Fixed bugs, I mean... features
%   - \infrule can't be used inside a formulae environment.  Use it in text
%     mode or in a displaymath environment.
%   - \transition can't be used in text mode

% alpha v0.2 2005/01/06
%
% New features
%   - if and where labels can now be localised by redefining macros \ifname and
%     \wherename.  Notice that you needn't to worry about if your RC-BooK version
%     is 2.8 or higher.
%   - Use \remark{text} to typeset remarks in math environments.  By default, a
%     remark is aligned to the right.  Use \remark*{text} if you don't like
%     this behaviour.
%   - Use the axdef environment to typeset axiomatic definitions, the gendef
%     environment to typeset generic definitions, and the uniqdef environment to
%     typeset unique definitions.  For instance:
%
%        \begin{axdef}
%            add: \nat \times \nat \tfun \nat \\
%        \suchthat
%            \forall x, y: \nat \cdot \mbox{} \\
%            \tab add(x, y) = x + y \\
%        \end{axdef}
%
%        \begin{gendef}{X}
%            at: \seq X \times \nat \tfun X \\
%            first: \seq X \tfun X \\
%        \suchthat
%            \forall x: \seq X, y: \nat \cdot \mbox{} \\
%            \tab at(x) = x(y) \wedge \mbox{}\\
%            \tab first(x) = x(1) \\
%        \end{gendef}%
%
%        \begin{uniqdef}
%            \pi: \real \\
%        \suchthat
%            \pi = 3.14159265 \\
%        \end{uniqdef}%
%
%   - The following Z symbols are now available. The rest of the symbols are
%     available either standard TeX, LaTeX, AMSSymb, or AMSFonts, and they
%     should be available through RC-Book.
%
%     \nat      Naturals             \natone     Non-negative naturals
%     \integer  Integers             \real       Reals
%     \div      Integer division     \mod        Integer modulus
%
%     \existsone There exists one    \then       then
%     \iff      If and only if       \bool       Booleans
%
%     \pset     Power set            \psetone    Non-empty power set
%     \fset     Finite power set     \fsetone    Non-empty finite power set
%     \upto     Range
%
%     \dom      Domain               \ran       Range
%     \dres     Domain restriction   \rres      Range restriction
%     \dsub     Domain subtraction   \rsub      Range subtraction
%     \rel      Relation             \tfun      Total function
%     \tinj     Total injection      \tsur      Total surjection
%     \pfun     Partial function     \pinj      Partial injection
%     \psur     Partial surjection   \ffun      Finite total
%     \finj     Finite partial inj.  \bij       Bijection
%
%     \seq      Sequence             \seqone    Non-empty sequence
%     \emptyseq Empty sequence       \head      Head of a sequence
%     \tail     Tail of a sequence
%
%     \bag      Bag                  \bagone    Non-empty bag
%     \emptybag Empty bag            \lbag      Left bag delimiter
%     \rbag     Right bag delimiter
%
%     \ddef     Syntax definition    \bbar      Syntax option
%     \lang     Syntax left delim.   \rang      Syntax right delim.
%     \sdef     Definition           \defs      Definition
%     \varsdef  Definition
%
%     \lblot    Left instance delim. \rblot     Right instance delim.
%     \defaultsto Value
%
%     \atnext   Holds at next state  \atlast    Holds at last state
%     \always   Holds from now on    \uptilnow  Held until now
%     \eventually Will hold          \previously Has held
%
% Fixed bugs, I mean... features
%   - Z-like environments can now be used inside environments that
%     reduce the amount of horizontal space, e.g., enumerate or itemize.

% alpha v0.3 2007/08/31
%
% New features
%   - This version is completely independent from RC-BooK, so you may use
%     it in documents that use other LaTeX classes.
%   - Incompatibility with oz.sty is made explicit to the user who requests
%     both RC-Math and oz.sty
%   - The scheme environment was renamed to schema to align our terms with
%     the Z book.
%   - If you've previously used \tab to indent your formulae within a Z
%     environment, please, consider using \T, \M, and \O instead, namely:
%
%       * \Tn -> Inserts n tabs
%       * \M  -> Sets the left margin of the forthcoming lines to
%                the current horizontal position.
%       * \B  -> Resets the current left margin to the previous one.
%
%     For instance, consider the following example:
%
%        \begin{schema}{Tabbing}
%            m, n: \nat \\
%            x, y: \real \\
%        \suchthat
%            m < n \then \M x > 0 \wedge \mbox{} \\
%                           y > 0 \B \\
%            m > n \then \M x < 0 \wedge \mbox{} \\
%                           y < 0 \B \\
%        \end{schema}
%
%     Note that \M and \B work well inside nested environments.
%
%   - If you wish to have a brochure about RC-Math symbols, just create a blank
%     document and write \showrcmathcommands.  This will typeset a table that
%     includes all of the symbols this package defines.  If you happen not to
%     find a symbol, please, take a look at AMS symbols, do not reinvent the
%     wheel!
%   - Use the syntax environment to typeset syntax definitions.  For instance,
%     the following defines Z types:
%
%        \begin{syntax}
%           TYPE & \ddef & given \lang NAME \rang \\
%                & \bbar & power \lang TYPE \rang \\
%                & \bbar & tuple \lang \seq TYPE \rang \\
%                & \bbar & scheme \lang IDENT \ffun TYPE \rang \\
%        \end{syntax}
%
%   - \suchthat, \M and \O are not global definitions.  They're available in Z
%     environments only.  By the way, now, it is safe to omit from the line before
%     \suchthat; no error is reported by TeX.
%
%   - Inference rules have gone a major revision.  As a result, the \infrule
%     command is no longer available. Use the infrule environment instead, namely:
%
%        \begin{infrule}[Rule Name]
%            \begin{antecedent} x >= f(y) \\ y >= f(x) \end{antecedent}
%            \begin{consequent} x = y \end{consequent}
%            \begin{applicability} f(x) + f(y) > 0 \end{applicability}
%            \begin{definitions} f(x) & \sdef & \sin\cos x \end{definitions}
%        \end{infrule}
%
%   - The formulae environment has been improved a lot, and it now allows to
%     typeset labels aligned to the right, as usual.  Every formulae environment
%     includes an extra column to typeset the label.  For instance:
%
%        \begin{formulae}
%            f(x) & = & \cos x & \labeleqn{eqn-1} \\ % Notice the & before labeleqn
%            g(x) & = & \sin x & \labeleqn{eqn-3} \\
%            h(x) & = & \tan x \\ % No label for this formula
%        \end{formulae}
%
%   - By default, formulae produces a box that is the right size, so that you can
%     center it, for instance.  Should you need a text-wide formulae, please, use
%     the formulae* variant.  Note that the formulae* variant can align formulae
%     numbers to the right of the page, whereas formulae cannot.
%
%   - If a proof ends in an enumerate o other such environment, RC-Math is not able
%     to place the QED symbol properly.  I don't think this can be done with TeX.
%     in such cases, use \qedhere to place the QED symbol where appropriate.
%
%   - There's a new environment called casedef to typeset cases.  For instance:
%
%        \[ x = \begin{casedef}[\{] case 1 \\ case 2 \\ case 3 \\ \end{casedef} \]
%
%     produces the following typesetting:
%
%              /-
%              |  case 1
%         x =  |  case 2
%              |  case 3
%              \-
%
% Fixed bug... I mean, features
%   - Formulae, schema, and inference environments may be nested arbitrarily!
%   - The spacing between a Z environment and the preceding and the succeeding
%     paragraphs is now correct.
%   - Z environments have now the exact width to enclose their contents.
%   - Temporal logic symbols have been corrected so that they are typeset well
%     at all sizes.
%   - There was a problem with \sdef, \defs and other commands that need a
%     \mathstrut in their definition as part of an inference rule.

\NeedsTeXFormat{LaTeX2e}[1995/12/01]

\ProvidesPackage{rc-math}
   [2007/08/31 alpha v0.3 Copyright (C) 2004-2007 The Distributed Group]

\typeout{rc-math.sty alpha v0.3 Copyright (C) 2004-2007 The Distributed Group}

\RequirePackage{fleqn}
\RequirePackage{amssymb}
\RequirePackage{amsfonts}
\RequirePackage{latexsym}
\RequirePackage{array}

\AtBeginDocument{%
    \bgroup
        \makeatletter
        \ifx\zed\@undefined
        \else
            \@latex@error{RC-Math does not work well with oz.sty}
        \fi
    \egroup
    \mathindent=\parindent
}

% \RCMath

\newcommand{\RCMath}%
{%
    R%
    \kern-.1667em\raise.25ex\hbox{C}%
    \kern-.25em\raise.25ex\hbox{--}%
    M%
    \kern-.2em\lower.5ex\hbox{A}%
    \kern-.4em\raise.5ex\hbox{T}%
    \kern-.2em\lower.2ex\hbox{H}%
    \xspace%
}

\def\showrcmathcommands{%
    \bgroup
        \def\macro##1{\texttt{\ensuremath{\backslash}##1}}
        \scriptsize%
        \par\smallbreak
        \noindent\centering
        \begin{tabular}{rllrll}
            $\nat$ & \macro{nat} & Naturals & $\natone$ & \macro{natone} & Non-negative naturals \\
            $\integer$ & \macro{integer} & Integers & $\real$ & \macro{real} & Reals \\
            $\div$ & \macro{div} & Integer division & $\mod$ & \macro{mod} & Integer modulus \\
            \\
            $\existsone$ & \macro{existsone} & There exists one & $\then$ & \macro{then} & then \\
            $\iff$ & \macro{iff} & If and only if & $\bool$ & \macro{bool} & Booleans \\
            \\
            $\pset$ & \macro{pset} & Power set & $\psetone$ & \macro{psetone} & Non-empty power set \\
            $\fset$ & \macro{fset} & Finite power set & $\fsetone$ & \macro{fsetone} & Non-empty finite power set \\
            $\upto$ & \macro{upto} & Range \\
            \\
            $\dom$ & \macro{dom} & Domain & $\ran$ & \macro{ran} & Range \\
            $\dres$ & \macro{dres} & Domain restriction & $\rres$ & \macro{rres} & Range restriction \\
            $\dsub$ & \macro{dsub} & Domain subtraction & $\rsub$ & \macro{rsub} & Range subtraction \\
            $\rel$ & \macro{rel} & Relation & $\tfun$ & \macro{tfun} & Total function \\
            $\tinj$ & \macro{tinj} & Total injection & $\tsur$ & \macro{tsur} & Total surjection \\
            $\pfun$ & \macro{pfun} & Partial function & $\pinj$ & \macro{pinj} & Partial injection \\
            $\psur$ & \macro{psur} & Partial surjection & $\ffun$ & \macro{ffun} & Finite total \\
            $\finj$ & \macro{finj} & Finite partial inj. & $\bij$ & \macro{bij} & Bijection \\
            \\
            $\seq$ & \macro{seq} & Sequence & $\seqone$ & \macro{seqone} & Non-empty sequence \\
            $\emptyseq$ & \macro{emptyseq} & Empty sequence & $\head$ & \macro{head} & Head of a sequence \\
            $\tail$ & \macro{tail} & Tail of a sequence \\
            \\
            $\bag$ & \macro{bag} & Bag & $\bagone$ & \macro{bagone} & Non-empty bag \\
            $\lbag$ & \macro{lbag} & Left bag delimiter & $\rbag$ & \macro{rbag} & Right bag delimiter \\
            $\emptybag$ & \macro{emptybag} & Empty bag \\
            \\
            $\ddef$ & \macro{ddef} & Syntax definition & $\bbar$ & \macro{bbar} & Syntax option \\
            $\lang$ & \macro{lang} & Syntax left delim. & $\rang$ & \macro{rang} & Syntax right delim. \\
            $\sdef$ & \macro{sdef} & Definition & $\defs$ & \macro{defs} & Definition \\
            $\varsdef$ & \macro{varsdef} & Definition \\
            \\
            $\lblot$ & \macro{lblot} & Left instance delim. & $\rblot$ & \macro{rblot} & Right instance delim. \\
            $\defaultsto$ & \macro{defaultsto} & Value \\
            \\
            $\atnext$ & \macro{atnext} & Holds at next state & $\atlast$ & \macro{atlast} & Holds at last state \\
            $\always$ & \macro{always} & Holds from now on & $\uptilnow$ & \macro{uptilnow} & Held until now \\
            $\eventually$ & \macro{eventually} & Will hold & $\previously$ & \macro{previously} & Has held \\
        \end{tabular}
        \par\smallbreak
    \egroup
}

% Z symbols

\def\nat{{\mathbb N}}
\def\natone{{\mathbb N}_1}
\def\integer{{\mathbb Z}}
\def\real{{\mathbb R}}
\def\div{\mathbin{\mathrm{div}}}
\def\mod{\mathbin{\mathrm{mod}}}

\def\existsone{\exists_1}
\def\then{\Rightarrow}
\def\iff{\Leftrightarrow}
\def\bool{{\mathbb B}}

\def\pset{\mathop{\mathstrut{{\mathbb P}}}\nolimits}
\def\psetone{\pset_1}
\def\fset{\mathop{\mathstrut{{\mathbb F}}}\nolimits}
\def\fsetone{\fset_1}
\def\upto{\mathbin{\ldotp\ldotp}}

\def\dom{\mathop{\mathrm{dom}}}
\def\ran{\mathop{\mathrm{ran}}}
\DeclareMathSymbol{\dres}{\mathbin}{AMSa}{"43}
\DeclareMathSymbol{\rres}{\mathbin}{AMSa}{"42}
\def\dsub{\mathbin{\rlap{\raise.01ex\hbox{$-$}}{\dres}}}
\def\rsub{\mathbin{\rlap{\raise.01ex\hbox{$-$}}{\rres}}}
\let\rel\leftrightarrow
\let\tfun\rightarrow
\let\tinj\rightarrowtail
\def\tsur{\mathrel{\ooalign{$\tfun$\hfil\cr$\mkern4mu\tfun$}}}
\def\pfun{\rc@partial\tfun}
\def\pinj{\rc@partial\tinj}
\def\psur{\rc@partial\tsur}
\def\ffun{\rc@finite\tfun}
\def\finj{\rc@finite\tinj}
\def\bij{\mathrel{\ooalign{$\tinj$\hfil\cr$\mkern5mu\tfun$}}}

\def\rc@partial#1{\mathrel{\ooalign{\hfil$\mapstochar\mkern 5mu$\hfil\cr$#1$}}}
\def\rc@finite#1{\mathrel{\ooalign{\hfil$\mapstochar\mkern 3mu\mapstochar\mkern 5mu$\hfil\cr$#1$}}}

\def\seq{\mathop{\mathrm{seq}}}
\def\seqone{\seq_1}
\def\emptyseq{\langle\rangle}
\def\head{\mathop{\mathrm{head}}}
\def\tail{\mathop{\mathrm{tail}}}

\def\bag{\mathop{\mathrm{bag}}}
\def\bagone{\bag_1}
\def\emptybag{\lbag\rbag}
\def\lbag{[\![}
\def\rbag{]\!]}

\def\ddef{\mathrel{\mathstrut{\;::=\;}}}
\def\bbar{\mathrel{\mathstrut{\hbox{\large$|$}}}}
\def\lang{\langle\!\langle}
\def\rang{\rangle\!\rangle}
\def\sdef{\mathrel{\mathstrut{\widehat=}}}
\def\defs{\mathrel{\mathstrut{==}}}
\def\varsdef{\mathrel{\mathstrut{\triangleq}}}

\def\lblot{\langle\!|}
\def\rblot{|\!\rangle}
\def\defaultsto{\rightsquigarrow}

\def\atnext{\kern0.01em\footnotesize\bigcirc}
\def\always{\lower0.37ex\hbox{$\large\Box$}}
\def\eventually{\lower0.37ex\hbox{$\large\Diamond$}}

\newdimen\RCMTH@savewidth
\newdimen\RCMTH@width

\def\atlast{%
    \bgroup%
        \setbox0=\hbox{\ensuremath{\bigcirc}}%
        \setbox1=\hbox{-}%
        \RCMTH@savewidth=\wd0%
        \RCMTH@width=0.5\wd0%
        \advance\RCMTH@width by -0.45\wd1%
        \wd0=\RCMTH@width%
        \mathop{\hbox to \RCMTH@savewidth{\box0\raise0.05em\box1}}%
    \egroup%
}

\def\uptilnow{%
    \bgroup%
        \setbox0=\hbox{\ensuremath{\Box}}%
        \setbox1=\hbox{-}%
        \RCMTH@savewidth=\wd0%
        \RCMTH@width=0.5\wd0%
        \advance\RCMTH@width by -0.45\wd1%
        \wd0=\RCMTH@width%
        \mathop{\hbox to \RCMTH@savewidth{\box0\raise0.1em\box1}}%
    \egroup%
}

\def\previously{%
    \bgroup%
        \setbox0=\hbox{\ensuremath{\Diamond}}%
        \setbox1=\hbox{-}%
        \RCMTH@savewidth=\wd0%
        \RCMTH@width=0.5\wd0%
        \advance\RCMTH@width by -0.45\wd1%
        \wd0=\RCMTH@width%
        \mathop{\hbox to \RCMTH@savewidth{\box0\raise0.1em\box1}}%
    \egroup%
}

% \comment{text}

\def\remark{%
    \@ifnextchar*{\rc@leftremark}{\rc@remark}%
}

\def\rc@remark#1{%
    \hss\mbox{\quad\small[#1]}%
}

\def\rc@leftremark*#1{%
    \mbox{\small[#1]\quad}%
}

% \begin{casedef}[symb] case1 \\ case2 \\ ... \end{casedef}

\newbox\rcm@casedefbox

\newenvironment{casedef}[1][.]{%
    {\ifnum0=`}\fi% \Makes sure that casedef may be nested inside formuale
    \def\rcm@casedefchar{#1}%
    \ifmmode%
        \def\RCMT@casedefhreader{\tabular{@{}>{$}l<{$}@{}}}%
    \else
        \def\RCMT@casedefhreader{\tabular{@{}l@{}}}%
    \fi%
    \setbox\rcm@casedefbox=\hbox\bgroup%
        \RCMT@casedefhreader%
}{%
        \endtabular%
    \egroup%
    \ensuremath{\left\rcm@casedefchar\box\rcm@casedefbox\right.}%
    \ifnum0=`{\fi}%
}

% \begin{\RCHM@formulae}[column-spec] text \end{\RCHM@formulae}

%\ifx\rc@originalmkpream\@undefined
%    \let\rc@originalmkpream\@mkpream
%\fi

\newenvironment{formulae}[1][>{\displaystyle}r@{\;}>{\displaystyle}c@{\;}>{\displaystyle}l]{%
    \RCHM@formulae{#1}{}%
}{%
    \RCHM@endformulae%
}%

\newenvironment{formulae*}[1][r@{\;}c@{\;}l]{%
    \RCHM@formulae{#1}{to \hsize}%
}{%
    \RCHM@endformulae%
}%

\let\RCMT@savearray\array
\let\RCMT@saveendarray\endarray
\newbox\RCMT@formulaebox

\def\RCHM@formulae#1#2{%
    \bgroup%
        {\ifnum0=`}\fi%
        \ifhmode%
            \par%
        \fi%
        \ifmmode%
            \def\RCMT@formulaeleftmargin{}%
        \else%
            \def\RCMT@formulaeleftmargin{\hskip\parindent\hskip\@totalleftmargin}%
            \addvspace{\abovedisplayskip}%
        \fi
        % PATCH array so that it needs not explicit nesting inside formulae
        % BEGIN
        \def\array{%
            {\ifnum0=`}\fi%
            \RCMT@savearray%
        }%
        \def\endarray{%
            \RCMT@saveendarray%
            \ifnum0=`{\fi}%
        }%
        \def\endtabular{%
            \RCMT@saveendarray$%
            \egroup%
        }
        % END
        \setbox\@arstrutbox\hbox{%
            \vrule height \arraystretch\ht\strutbox
                   depth \arraystretch\dp\strutbox
                   width 0pt%
        }%
        \let\@acol\@arrayacol%
%        \let\@classz\@arrayclassz%
%        \let\@classiv\@arrayclassiv%
        %\@mkpream{@{\hskip\parindent\hskip\@totalleftmargin}#1@{}}%
        \@mkpream{@{\RCMT@formulaeleftmargin}#1}%
        \edef\@preamble{%
            \everycr={}%
            \mathsurround=0pt%
            \halign #2\bgroup%
                \@arstrut%
                \@preamble%
                \tabskip\@centering&%
                $\@sharp$\tabskip\z@skip\crcr%
        }%
        %\show\@preamble%
        \let\@sharp##%
        \let\\\cr%
        \def\d@llarbegin{$}%
        \let\d@llarend\d@llarbegin%
        \setbox\RCMT@formulaebox=\vbox\bgroup%
            \@preamble%
}

\def\RCHM@endformulae{%
            \crcr%
            \egroup%
        \egroup%
        \noindent\box\RCMT@formulaebox%
        \ifmmode%
            \relax%
        \else%
            \par\addvspace{\belowdisplayskip}%
        \fi%
        \ifnum0=`{\fi}%
    \egroup%
}


% THIS WORKS!
%\def\eqnlabelspec{@{\qquad}r}
%\newenvironment{formulae}[1][r@{\,}c@{\,}l]
%{%
%%        \displaymath%
%%            \array{#1\eqnlabelspec}%
%    $$%
%    \displ@y%
%    \tabskip\parindent%
%    \halign to\displaywidth\bgroup%
%        \hfil$\@lign\displaystyle{##\,}$\tabskip\z@skip&%
%        \hfil$\@lign\displaystyle{\,##\,}$\tabskip\z@skip&%
%        $\@lign\displaystyle{\,##}$\hfil\tabskip\@centering&%
%        \llap{$\@lign##$}\tabskip\z@skip\crcr%
%}
%{%
%        \crcr%
%    \egroup$$
%%            \endarray%
%%         \enddisplaymath%
%}


% \labeleqn{label}

\def\leaderfill{\leaders\hbox to 1em{\hss.\hss}\hfill}

\newcommand{\labeleqn}[1]
{%
    \refstepcounter{equation}%
    \label{#1}%
    \quad(\theequation)%
}

% Tabulators

\newcount\z@stackmin
\newcount\z@stackmax
\newcount\z@stacktop

\newbox\z@curline
\newbox\z@curfield
\newdimen\z@curindent
\dimen\z@curindent=0pt

\newcount\z@localstackmin
\newcount\z@localstackmax
\newcount\z@localstacktop
\newdimen\z@localcurindent

\newcount\z@counta
\newcount\z@countb

\newdimen\z@tab
\z@tab=2em% This is the width of a \T

\newcount\z@maxtab
\z@maxtab=4% this is the maximum number of \M allowed plus one


\def\z@createstack{%
    \newdimen\z@temp% Must be declared here!
    \global\z@stackmin=\allocationnumber%
        \z@counta=\z@maxtab%
        \loop \ifnum\z@counta > 1%
            \newdimen\z@temp%
            \advance\z@counta by -1%
        \repeat%
        \global\z@stackmax=\allocationnumber%
        \global\dimen\z@stackmin=0pt%
        \global\z@stacktop=\z@stackmin%
}
\z@createstack
%\typeout{+++GLOBAL STACK \the\z@stackmin -- \the\z@stackmax}

\def\z@savestack{%
%\typeout{+++SAVING STACK...}
    \newdimen\z@temp% Must be declared here
    \z@localstackmin=\allocationnumber%
    \z@counta=\z@maxtab%
    \loop \ifnum\z@counta > 1%
        \newdimen\z@temp%
        \advance\z@counta by -1%
    \repeat%
    \z@localstackmax=\allocationnumber%
%\typeout{+++GLOBAL STACK \the\z@stackmin -- \the\z@stackmax}
%\typeout{+++LOCAL STACK \the\z@localstackmin -- \the\z@localstackmax}
    \z@counta=\z@localstackmin%
    \z@countb=\z@stackmin%
    \loop \ifnum\z@counta < \z@localstackmax%
%\typeout{++\the\z@countb --> \the\z@counta++}%
        \global\dimen\z@counta=\dimen\z@countb%
        \advance\z@counta by 1%
        \advance\z@countb by 1%
    \repeat%
    \z@localstacktop=\z@stacktop%
    \global\dimen\z@stackmin=0pt%
    \global\z@stacktop=\z@stackmin%
    \z@localcurindent=\z@curindent%
}

\def\z@restorestack{%
%\typeout{+++RESTORING STACK...}
%\typeout{+++GLOBAL STACK \the\z@stackmin -- \the\z@stackmax}
%\typeout{+++LOCAL STACK \the\z@localstackmin -- \the\z@localstackmax}
    \z@counta=\z@localstackmin%
    \z@countb=\z@stackmin%
    \loop \ifnum\z@counta < \z@localstackmax%
%\typeout{++\the\z@counta --> \the\z@countb++}%
        \global\dimen\z@countb=\dimen\z@counta%
        \advance\z@counta by 1%
        \advance\z@countb by 1%
    \repeat%
    \global\z@stacktop=\z@localstacktop%
    \global\z@curindent=\z@localcurindent%
}

\def\z@startline{%
    \setbox\z@curline\hbox{}%
    \global\z@curindent\dimen\z@stacktop%
    %\z@curindent\dimen\z@stacktop%
    \hskip \arraycolsep%
    \z@startfield%
}

\def\z@stopline{%
    \z@stopfield%
    \hbox{%
        \hskip\z@curindent%
        \box\z@curline%
    }%
}

\def\z@startfield{%
    \global\setbox\z@curfield%
        \hbox\bgroup$\mbox{}%
    %\setbox\z@curfield%
    %    \hbox\bgroup$\mbox{}%
}

\def\z@stopfield{%
    $\egroup%
    %\setbox\z@curline\hbox{%
    %    \unhbox\z@curline%
    %    \unhbox\z@curfield%
    %}%
    \global\setbox\z@curline\hbox{%
        \unhbox\z@curline%
        \unhbox\z@curfield%
    }%
}

% Z Environment

\def\z@schemadefinitions{%
    \def\T##1{\hskip ##1\z@tab}%
    %
    \def\M{%
        \hbox{\kern0pt}%
        \z@stopfield%
        \ifnum \z@stacktop < \z@stackmax%
            \global\advance\z@stacktop by \@ne%
            %\advance\z@stacktop by 1%
        \else%
            \@latexerr{Z margin stack overflow (too many \string\M's)}%
        \fi%
        \global\dimen\z@stacktop\z@curindent%
        %\dimen\z@stacktop\z@curindent%
        \global\advance\dimen\z@stacktop by \wd\z@curline%
        %\advance\dimen\z@stacktop by \wd\z@curline%
        \z@startfield%
    }%
    %
    \def\B{%
        \ifnum \z@stacktop > \z@stackmin%
            \global\advance\z@stacktop by \m@ne%
            %\advance\z@stacktop by -1%
        \else%
            \@latexerr{Z Margin stack underflow (too many \string\B's)}%
        \fi%%
    }%
    %
    \def\suchthat{%
        \crcr%
        \omit%
        %\hskip-\z@curindent%
        \hbox{% to 0.50\hsize{%
            \vbox{%
                \vbox to 4pt{}%
                \hbox to 7em{%
                    \@schema@hrulefill%
                }%
                \vbox to 4pt{}%
            }%
        }%
        \\%
    }%
}

\newtoks\z@titletoks
\newtoks\z@footertoks

\newbox\z@headerbox
\newbox\z@footerbox
\newbox\z@bodybox
\newtoks\z@leftruletoks
\newtoks\z@rightruletoks

\newbox\z@titlebox
\newdimen\z@titlewidth
\newdimen\z@headerwidth
\newdimen\z@bodywidth
\newdimen\z@rightrulewidth
\newdimen\z@boxwidth

\newif\if@schema
\newcommand{\@schema@true}{\let\if@schema\iftrue}
\newcommand{\@schema@false}{\let\if@schema\iffalse}
\@schema@false

\newcounter{@schema@begin@lineno}
\newcommand{\@schema@hrulefill}{\mbox{}\leaders\hrule height 0.5pt\hfill}

\def\z@prologue#1#2#3{%
    \bgroup%
        {\ifnum0=`}\fi%
%        \if@schema%
%            \errmessage{The Z box in line \arabic{@schema@begin@lineno}~%
%                        must be closed before you begin a new one}%
%        \fi%
%        \@schema@true%
%        \setcounter{@schema@begin@lineno}{\the\inputlineno}%
        \z@savestack%
        \csname z@#1\endcsname{#2}{#3}%
        \setbox\z@bodybox=\hbox\bgroup%
            \z@schemadefinitions%
            $\array{@{\z@startline}l@{\z@stopline}}%
}

\def\z@epilogue{%
            \endarray$%
            \hbox to \arraycolsep{}%
        \egroup%
        \setbox\z@titlebox=\hbox{\the\z@titletoks}%
        \z@titlewidth=\wd\z@titlebox
        \z@headerwidth=\z@titlewidth%
        \advance\z@headerwidth by 2em%
        \z@bodywidth=\wd\z@bodybox%
        \advance\z@bodywidth by 0.5pt% The width of the vertical rule
        \ifnum \z@bodywidth < \z@headerwidth%
            \z@boxwidth=\z@headerwidth%
        \else
            \z@boxwidth=\z@bodywidth%
        \fi%
        \z@rightrulewidth=\z@boxwidth%
        \advance\z@rightrulewidth by -\z@titlewidth%
        \advance\z@rightrulewidth by -1em%
        \advance\z@rightrulewidth by -0.5pt% The width of the vertical rule
        \setbox\z@headerbox=\hbox to \z@boxwidth{\the\z@leftruletoks\box\z@titlebox\the\z@rightruletoks}%
        \setbox\z@footerbox=\hbox to \z@boxwidth{\the\z@footertoks}%
        \RCHM@formulae{l}{}%
            \vbox{%
                \lineskip=0pt%
                \box\z@headerbox%
                \hbox{\vrule height \ht\z@bodybox width 0.5pt\box\z@bodybox}%
                \box\z@footerbox%
            }%
        \RCHM@endformulae%
%        \@schema@false%
        \z@restorestack%
        \ifnum0=`{\fi}%
    \egroup%
}

\newtoks\z@singleleftruletoks
\z@singleleftruletoks={%
    \vrule height 0.5pt width 0.5pt depth 4pt%
    \hbox to 1em {\@schema@hrulefill}%
}

\newtoks\z@singlerightruletoks
\z@singlerightruletoks={%
    \@schema@hrulefill%
}

\newtoks\z@doubleleftruletoks
\z@doubleleftruletoks={%
    \vrule height 3pt width 0.5pt depth 4pt%
    \vbox{%
        \offinterlineskip%
        \hbox to 1em {\@schema@hrulefill}%
        \hbox to 1em {\vbox to 2pt{}}%
        \hbox to 1em {\@schema@hrulefill}%
    }%
}

\newtoks\z@doublerightruletoks
\z@doublerightruletoks={%
    \vbox{%
        \offinterlineskip%
        \hbox to \z@rightrulewidth{\@schema@hrulefill}%
        \hbox to \z@rightrulewidth{\vbox to 2pt{}}%
        \hbox to \z@rightrulewidth{\@schema@hrulefill}%
    }%
}

\newtoks\z@singlebottomruletoks
\z@singlebottomruletoks={%
    \vrule height 2pt width 0.5pt%
    \@schema@hrulefill%
}

\def\z@maketitletoks#1#2{%
    \ifx\\#2\\%
        \z@titletoks={%
            \ifx\\#1\\%
            \else%
                \,\,[$#1$]\,\,%
            \fi%
         }%
    \else%
        \z@titletoks={%
            \,\,$#2$%
            \ifx\\#1\\%
                \,\,%
            \else%
                \,[$#1$]\,\,%
            \fi%
        }%
    \fi%
}

\def\z@doublerule#1#2{%
    \z@leftruletoks=\z@doubleleftruletoks%
    \z@rightruletoks=\z@doublerightruletoks%
    \z@footertoks=\z@singlebottomruletoks%
    \z@maketitletoks{#1}{#2}%
}

\def\z@singlerule#1#2{%
    \z@leftruletoks=\z@singleleftruletoks%
    \z@rightruletoks=\z@singlerightruletoks%
    \z@footertoks=\z@singlebottomruletoks%
    \z@maketitletoks{#1}{#2}%
}

\def\z@norule{%
    \z@leftruletoks={}%
    \z@rightruletoks={}%
    \z@footertoks={}%
    \z@maketitletoks{}{}%
}

% \begin{schema}[params]{name} text \suchthat text\end{schema}

\newenvironment{schema}[2][]%
{%
    \z@prologue{singlerule}{#1}{#2}%
}%
{%
    \z@epilogue%
}

% \begin{axdef} text \suchthat \end{axdef}

\newenvironment{axdef}%
{%
    \z@prologue{norule}{}{}%
}%
{%
    \z@epilogue%
}

% \begin{gendef} text \suclhthat \end{gendef}

\newenvironment{gendef}[1]%
{%
    \z@prologue{doublerule}{#1}{}%
}%
{%
    \z@epilogue%
}

% \begin{uniqdef} text \suclhthat \end{uniqdef}

\newenvironment{uniqdef}%
{%
    \z@prologue{doublerule}{}{}%
}%
{%
    \z@epilogue%
}


% \begin{syntax} text \end{syntax}

\newenvironment{syntax}%
{%
    \RCHM@formulae{rcl}{}%
    %$\array{rcl}%
}%
{%
    %\endarray$%
    \RCHM@endformulae%
}

% \begin{infrule}
%    \begin{antecedent} text \end{antecedent}
%    \begin{consequent} text \end{consequent}
%    \begin{applicability} text \end{applicability}
%    \begin{definitions} text \end{definitions}
% \end{infrule}

\ifx\ifname\@undefined
    \def\ifname{if}
\fi

\ifx\wherename\@undefined
    \def\wherename{where}
\fi

\newif\if@infrule
\newcommand{\@infrule@true}{\let\if@infrule\iftrue}
\newcommand{\@infrule@false}{\let\if@infrule\iffalse}
\@infrule@false

\newcounter{@infrule@begin@lineno}
\newcommand{\@infrule@hrulefill}{\mbox{}\leaders\hrule height 0.5pt\hfill}

\newbox\z@infrulenamebox
\newbox\z@infrulebodybox
\newbox\z@infruleseparatorbox
\newbox\z@antecedentbox
\newbox\z@consequentbox
\newbox\z@applicabilitybox
\newbox\z@definitionsbox
\newtoks\z@infruledefinitions

\z@infruledefinitions={%
    \def\antecedent{%
        %[[[\copy\z@antecedentbox]]]
        %\ifnum0=`{\fi}% This cancels the effect of \begin{...}
        %{\iffalse}\fi%
        \global\setbox\z@antecedentbox=\hbox\bgroup%
            $\array{c}%
    }%
    %
    \def\endantecedent{%
            \endarray$%
        \egroup%
        %{\ifnum0=`}\fi% Restores the group for \end{...}
        %\iffalse{\fi}%
        %[[[\copy\z@antecedentbox]]]
    }%
    %
    \def\consequent{%
        \global\setbox\z@consequentbox=\hbox\bgroup%
            $\array{c}%
    }%
    %
    \def\endconsequent{%
            \endarray$%
        \egroup%
    }%
    %
    \def\applicability{%
        \global\setbox\z@applicabilitybox=\hbox\bgroup%
            \hbox{\space\ifname\space}%
            $\array[t]{@{}l@{}}%
    }%
    %
    \def\endapplicability{%
            \endarray$
        \egroup%
    }%
    %
    \def\definitions{%
        \global\setbox\z@definitionsbox=\hbox\bgroup%
            \mbox{\wherename\space}%
            $\array[t]{@{}r@{\,}c@{\,}l@{}}%
    }%
    %
    \def\enddefinitions{%
            \endarray$%
        \egroup%
    }%
}

\newbox\z@infruletempbbox
\newdimen\z@tempdimen

\def\infrule{%
    \@ifnextchar[\RCMT@infrule{\RCMT@infrule[]}
}

\def\RCMT@infrule[#1]{%
    \bgroup%
        {\ifnum0=`}\fi%
%        \if@infrule%
%            \errmessage{The Z box in line \arabic{@infrule@begin@lineno}~%
%                        must be closed before you begin a new one}%
%        \fi%
%        \@infrule@true%
        \the\z@infruledefinitions%
        \antecedent Antecedent \endantecedent%
        \consequent Consequent \endconsequent%
        \global\setbox\z@applicabilitybox=\hbox{}%
        \global\setbox\z@definitionsbox=\hbox{}%
        \setbox\z@infrulenamebox=\hbox{#1}%
}

\def\endinfrule{%
        \setbox\z@infrulebodybox=\hbox{%
            $\box\z@antecedentbox \over \box\z@consequentbox$%
        }%
        \RCHM@formulae{l}{}%
            \vbox{
                \hbox{%
                    \ifnum\wd\z@infrulenamebox > 0%
                        \hbox{[\box\z@infrulenamebox]\space}%
                    \fi%
                    \box\z@infrulebodybox%
                    \ifnum\wd\z@applicabilitybox > 0%
                        \box\z@applicabilitybox%
                    \fi%
                }%
                \ifnum\wd\z@definitionsbox > 0%
                    \hbox{\mathstrut}%
                    \hbox{\box\z@definitionsbox}%
                    %\hfill%
                \fi%
            }
        \RCHM@endformulae%
        \ifnum0=`{\fi}%
    \egroup%
}

%\newcommand{\infrule}[6][number]%
%{%
%    \bgroup%
%        \setbox0=\hbox{%
%            $\frac{\begin{array}{c} #3 \end{array}}{\begin{array}{c} #4 \end{array}}$
%        }%
%        \setbox2=\hbox{%
%            \ifthenelse{\equal{\string#5}{}}%
%            {%
%                \relax
%            }{%
%                \mbox{\space\ifname\space}%
%                $\begin{array}[t]{@{}l@{}} #5 \end{array}$
%            }%
%        }%
%        \setbox3=\hbox{%
%            \ifthenelse{\equal{\string#6}{}}%
%            {%
%                \relax
%            }{%
%                \mbox{}\\%
%                \mbox{\wherename\space}
%                $\begin{array}[t]{@{}r@{\,}c@{\,}l@{}} #6 \end{array}$
%            }%
%        }%
%        \vbox{%
%            \hbox{%
%                \box0%
%                \box2%
%                \ifthenelse{\equal{\string#1}{\string number}}%
%                {%
%                    \refstepcounter{equation}%
%                    \label{#2}%
%                    \hbox{\qquad\hbox{(\theequation)}}%
%                }{%
%                    \relax%
%                }%
%            }%
%            \dimen3=\wd3%
%            \dimen0=0pt\relax%
%            \ifthenelse{\lengthtest{\dimen3>\dimen0}}%
%                {\hbox{}\hbox{\box3}}%
%                {\relax}%
%        }
%    \egroup
%}%

% \transition{event}{name}{decorator}

% Think of using \overrightarrow from plain tex

\newsavebox{\@transition@box}
\newlength{\@transition@width}
\newsavebox{\@transition@head@box}
\newlength{\@transition@head@width}
\newlength{\@transition@head@height}
\newsavebox{\@transition@line@box}
\newlength{\@transition@line@width}

\newcommand{\transition}[3]%
{%
    \ifthenelse{\equal{#1}{}}%
    {%
        \def\@transition@first{\hspace*{4pt}}%
    }%
    {%
        \def\@transition@first{\scriptstyle #1}%
    }%
    \savebox{\@transition@line@box}{\ensuremath{\longrightarrow}}%
    \settowidth{\@transition@line@width}{\usebox{\@transition@line@box}}%
    \savebox{\@transition@box}{\ensuremath{\@transition@first}}%
    \settowidth{\@transition@width}{\usebox{\@transition@box}}%
    \addtolength{\@transition@width}{6pt}%
    \ifthenelse{\@transition@width<\@transition@line@width}%
      {\setlength{\@transition@width}{\@transition@line@width}}%
      {\relax}%
    \savebox{\@transition@head@box}{\ensuremath{\succ}}%
    \settowidth{\@transition@head@width}{\usebox{\@transition@head@box}}%
    \settoheight{\@transition@head@height}{\usebox{\@transition@head@box}}%
    \mathrel{%
        \stackrel%
            {\usebox{\@transition@box}}%
            {\rule[0.4\@transition@head@height]{\@transition@width}{0.4pt}}%
        \hspace*{-0.8\@transition@head@width}%
        \usebox{\@transition@head@box}_{#2}^{#3}%
    }%
}

% Theorems and the like

\ifx\theoremname\@undefined
    \def\theoremname{Theorem}
\fi
\ifx\corollaryname\@undefined
    \def\corollaryname{Corollary}
\fi
\ifx\lemmaname\@undefined
    \def\lemmaname{Lemma}
\fi
\ifx\propositionname\@undefined
    \def\propositionname{Proposition}
\fi
\ifx\examplename\@undefined
    \def\examplename{Example}
\fi
\ifx\definitionname\@undefined
    \def\definitionname{Definition}
\fi
\ifx\proofname\@undefined
    \def\proofname{Proof}
\fi

\newtheorem{theorem}{\theoremname}[chapter]
\newtheorem{corollary}{\corollaryname}[chapter]
\newtheorem{lemma}{\lemmaname}[chapter]
\newtheorem{proposition}{\propositionname}[chapter]
\newtheorem{example}{\examplename}[chapter]
\newtheorem{definition}{\definitionname}[chapter]

\def\proof{%
    \bgroup%
        \noindent\textbf{\proofname}\relax%
        \gdef\RCMT@QED{\mbox{}\hfill{$\Box$}\par}%
        \def\qedhere{\RCMT@QED\gdef\RCMT@QED{\relax}}%
}%

\def\endproof{%
        \RCMT@QED%
    \egroup%
}%

\endinput

% EOF rc-math.sty
